stages:
  - build
  - test
  - benchmark
  - benchmark-completion

# Build the VMs and run tests
# native includes jvm-ce,
# which is available with the --jvm flag from the laucher
build1-native-and-jvm-ce:
  stage: build
  tags: [yuria]
  script:
    - export PROJECT_FOLDER=$(pwd)
    - export PATH=${PROJECT_FOLDER}/bin:${PATH}

    # Copy Custom Config into TruffleRuby setup
    - export VARIANT=native-libgraal
    - cp faststart/${VARIANT}.env mx.truffleruby/${VARIANT}

    # build
    - jt build --env ${VARIANT}

    # package
    - export RESULT_HOME=$(dirname $(jt --use ${VARIANT} graalvm-home))
    - cd ${RESULT_HOME}
    - mv $(basename $(jt --use ${VARIANT} graalvm-home)) truffleruby-${VARIANT}
    - rm -Rf truffleruby-${VARIANT}/legal truffleruby-${VARIANT}/lib/visualvm truffleruby-${VARIANT}/lib/jfr truffleruby-${VARIANT}/tools truffleruby-${VARIANT}/include truffleruby-${VARIANT}/lib/llvm
    - tar -I lz4 -cf ${PROJECT_FOLDER}/truffleruby-${VARIANT}.tar.lz4 truffleruby-${VARIANT}

    - |
      sftp tmp-artifacts << EOF
        -mkdir incoming/${CI_PIPELINE_ID}/
        put ${PROJECT_FOLDER}/truffleruby-${VARIANT}.tar.lz4 incoming/${CI_PIPELINE_ID}/
      EOF

build2-jvm:
  stage: build
  tags: [yuria2]
  script:
    - export PROJECT_FOLDER=$(pwd)
    - export PATH=${PROJECT_FOLDER}/bin:${PATH}
    - export VARIANT=jvm
    - jt build --env ${VARIANT}
    
    # test
    # Run time: 2.3min
    - jt --use ${VARIANT} test fast
    # Run time: 2sec
    - jt --use ${VARIANT} test :next

    # package
    - export RESULT_HOME=$(dirname $(jt --use ${VARIANT} graalvm-home))
    - cd ${RESULT_HOME}
    - mv $(basename $(jt --use ${VARIANT} graalvm-home)) truffleruby-${VARIANT}
    - rm -Rf truffleruby-${VARIANT}/legal truffleruby-${VARIANT}/lib/visualvm truffleruby-${VARIANT}/lib/jfr truffleruby-${VARIANT}/tools truffleruby-${VARIANT}/include truffleruby-${VARIANT}/lib/llvm
    - tar -I lz4 -cf ${PROJECT_FOLDER}/truffleruby-${VARIANT}.tar.lz4 truffleruby-${VARIANT}

    - |
      sftp tmp-artifacts << EOF
        -mkdir incoming/${CI_PIPELINE_ID}/
        put ${PROJECT_FOLDER}/truffleruby-${VARIANT}.tar.lz4 incoming/${CI_PIPELINE_ID}/
      EOF

# Run Benchmarks
benchmark1:
  stage: benchmark
  tags: [yuria]
  script:
    - sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/truffleruby-jvm.tar.lz4
    - sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/truffleruby-native-libgraal.tar.lz4
    
    - export PROJECT_FOLDER=$(pwd)
    - rm -Rf /tmp/truffleruby
    - mkdir -p /tmp/truffleruby
    - cp -R faststart /tmp/truffleruby
    - cd /tmp/truffleruby
    - tar -I lz4 -xf ${PROJECT_FOLDER}/truffleruby-jvm.tar.lz4
    - tar -I lz4 -xf ${PROJECT_FOLDER}/truffleruby-native-libgraal.tar.lz4
    
    - cd faststart
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf m:yuria
    - rm -Rf /tmp/truffleruby

# Run Benchmarks
benchmark2:
  stage: benchmark
  tags: [yuria2]
  script:
    - sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/truffleruby-jvm.tar.lz4
    - sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/truffleruby-native-libgraal.tar.lz4
    
    - export PROJECT_FOLDER=$(pwd)
    - rm -Rf /tmp/truffleruby
    - mkdir -p /tmp/truffleruby
    - cp -R faststart /tmp/truffleruby
    - cd /tmp/truffleruby
    - tar -I lz4 -xf ${PROJECT_FOLDER}/truffleruby-jvm.tar.lz4
    - tar -I lz4 -xf ${PROJECT_FOLDER}/truffleruby-native-libgraal.tar.lz4
    
    - cd faststart
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf m:yuria2
    - rm -Rf /tmp/truffleruby

# Run Benchmarks
benchmark3:
  stage: benchmark
  tags: [yuria3]
  script:
    - sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/truffleruby-jvm.tar.lz4
    - sftp tmp-artifacts:incoming/${CI_PIPELINE_ID}/truffleruby-native-libgraal.tar.lz4
    
    - export PROJECT_FOLDER=$(pwd)
    - rm -Rf /tmp/truffleruby
    - mkdir -p /tmp/truffleruby
    - cp -R faststart /tmp/truffleruby
    - cd /tmp/truffleruby
    - tar -I lz4 -xf ${PROJECT_FOLDER}/truffleruby-jvm.tar.lz4
    - tar -I lz4 -xf ${PROJECT_FOLDER}/truffleruby-native-libgraal.tar.lz4
    
    - cd faststart
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --branch="$CI_COMMIT_REF_NAME" -c rebench.conf m:yuria3
    - rm -Rf /tmp/truffleruby


report-completion:
  stage: benchmark-completion
  tags: [yuria]
  script:
    - cd faststart
    - rebench --experiment="CI ID $CI_PIPELINE_ID" --report-completion rebench.conf


# A full CI Run, which should be scheduled, weekly or so
full-test-run-on-jvm-ce:on-schedule:
  stage: build
  tags: [yuria]
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  script:
    - bin/jt build --env jvm-ce
    
    # Run time: 2.3min
    - bin/jt --use jvm-ce test fast

    # Run time: 2sec
    - bin/jt --use jvm-ce test :next
    
    # Run time: 21min
    - bin/jt --use jvm-ce test :truffle
    
    # Run time: 6.6min
    - bin/jt --use jvm-ce test :language
    
    # Run time: 21min
    - bin/jt --use jvm-ce test :core
    
    # Run time: 2.5min
    - bin/jt --use jvm-ce test :library

    # Run time: 2.2min
    - bin/jt --use jvm-ce test :cext

    # Run time: 1min
    - bin/jt --use jvm-ce test :security

    # Run time: 12min
    - bin/jt --use jvm-ce test :command_line
